services:
  fast-api-poc:
    image: fast-api-poc
    restart: always
    build:
      context: ../
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
      - "7000:7000"
    # command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    command:
      [
        "python",
        "-m",
        "debugpy",
        "--listen",
        "0.0.0.0:7000",
        "-m",
        "uvicorn",
        "app.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
        "--reload",
      ]
    volumes:
      - ../:/app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=process_management
      - POSTGRES_PORT=5432
      - ENV=development
    networks:
      - app-network

  postgres:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=process_management
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data:cached
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    volumes:
      - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - fast-api-poc
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app-network

  locust:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ../locust:/mnt/locust
    command: >
      -f /mnt/locust/locustfile.py
      --host http://fast-api-poc:8000
    depends_on:
      - fast-api-poc
    networks:
      - app-network

networks:
  app-network:
