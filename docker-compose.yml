services:
  api:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
      - '7000:7000'
    # command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    command:
      ['python', '-m', 'debugpy', '--listen', '0.0.0.0:7000', '-m', 'uvicorn', 'app.main:app', '--host', '0.0.0.0', '--port', '8000', '--reload']
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=process_management
      - POSTGRES_PORT=5432
      - ENV=development
    networks:
      - app-network

  postgres:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=process_management
    ports:
      - '5432:5432'
    expose:
      - '5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data:cached
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
